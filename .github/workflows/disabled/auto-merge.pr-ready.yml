# PR 준비 이후 스크립트(draft 해제)
# auto-merge: CI가 통과되었으면 해당 PR을 자동 병합(Squash Merge)

name: Auto merge after CI and PR ready for review

on:
  pull_request:
    types: [ready_for_review]

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write

    steps:
      - name: Merge PR if already passed CI
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const prNumber = pr.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // 이미 병합되었는지 확인
            if (pr.merged) {
              console.log('ℹ️ PR already merged. Skipping.');
              return;
            }

            // 브랜치 병합 가능 여부 확인
            const { data: prInfo } = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: prNumber
            });

            if (prInfo.mergeable_state !== 'clean') {
              console.log(`❌ PR not mergeable: ${prInfo.mergeable_state}`);
              return;
            }

            // 관련 이슈 추출
            const regex = /(?:close|closes|closed|fix|fixes|fixed|resolve|resolves|resolved)\s+#(\d+)/gi;
            const issueMatches = pr.body?.match(regex) || [];
            const issueNumbers = issueMatches.map(m => m.match(/#(\d+)/)?.[1]).filter(Boolean);
            const issueRefs = issueNumbers.map(n => `#${n}`);

            // 커밋 목록 조회
            const commits = await github.paginate(
              github.rest.pulls.listCommits,
              { owner, repo, pull_number: prNumber }
            );

            // co-author 목록 추출
            const coAuthors = new Set();
            for (const commit of commits) {
              const name = commit.commit.author?.name;
              const email = commit.commit.author?.email;
              if (name && email) {
                coAuthors.add(`Co-authored-by: ${name} <${email}>`);
              }

              const matches = commit.commit.message.match(/Co-authored-by:\s+.+<.+>/gi);
              if (matches) {
                for (const match of matches) {
                  coAuthors.add(match.trim());
                }
              }
            }

            // 커밋 메시지 작성
            const commitTitle = `${pr.title} (#${pr.number})`;
            const commitBody = [
              `Auto-merged after CI success and marked as ready for review.`,
              issueRefs.length ? `Related to - ${issueRefs.join(', ')}` : '',
              '---',
              ...coAuthors
            ].join('\n').trim();

            // 병합 실행
            await github.rest.pulls.merge({
              owner,
              repo,
              pull_number: prNumber,
              merge_method: 'squash',
              commit_title: commitTitle,
              commit_message: commitBody
            });

            console.log(`✅ PR #${prNumber} squash merged after marked ready.`);
