name: Create pull request

permissions:
  contents: write
  issues: write
  pull-requests: write

inputs:
  branch-name:
    description: 'Target branch name (e.g., issue/123, feat/login)'
    required: true
  base-branch:
    description: 'Base branch'
    required: true
  github-token:
    description: 'GitHub token'
    required: true

runs:
  using: composite
  steps:
    - name: Create pull request
      uses: actions/github-script@v7
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        script: |
          const issueNumber = context.payload.issue.number;
          const issueTitle = context.payload.issue.title;
          const issueAuthor = context.payload.issue.user.login;
          const targetBranch = '${{ inputs.branch-name }}';
          const baseBranch = '${{ inputs.base-branch }}';
          const owner = context.repo.owner;
          const repo = context.repo.repo;

          // PR 생성
          console.log(`📝 Creating PR for issue #${issueNumber} from branch ${targetBranch}`);
          const pr = await github.rest.pulls.create({
            owner,
            repo,
            title: `${issueTitle}`,
            head: targetBranch,
            base: baseBranch,
            body: `Closes #${issueNumber}`,
            draft: true
          });

          // PR에 assignee 할당
          console.log(`👤 Assigning @${issueAuthor} to PR #${pr.data.number}`);
          await github.rest.issues.addAssignees({
            owner,
            repo,
            issue_number: pr.data.number,
            assignees: [issueAuthor]
          });

          console.log(`💬 Waiting for few seconds..`);
          await new Promise(resolve => setTimeout(resolve, 5000));

          // 봇 코멘트 작성
          console.log(`💬 Adding bot comment to PR #${pr.data.number}`);
          const body = [
            "```bash",
            `git fetch origin`,
            `git checkout ${targetBranch}`,
            "",
            "```"
          ].join("\n");
          console.log(body);
          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number: pr.data.number,
            body: body
          });
          
          // 봇 코멘트 작성
          console.log(`💬 Adding bot comment to issue #${issueNumber}`);
          const branchUrl = `https://github.com/${owner}/${repo}/tree/${targetBranch}`;
          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number: issueNumber,
            body: `Created branch [${targetBranch}](${branchUrl}) for this issue and assigned to @${issueAuthor}`
          });

          console.log(`✅ Created PR #${pr.data.number} and assigned @${issueAuthor}`);
